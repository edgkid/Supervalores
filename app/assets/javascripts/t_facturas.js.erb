var i = 1;

// Añade una fila a la tabla con un select que contiene una lista de los recargos
function addRecargoRow () {
  $('#total-row').before(`
    <tr id="recargo${i}">
      <td><input class="deletable deletable-recargo" type="checkbox" name="deletable"></td>
      <td>
        <select class="select-recargo" id="t_recargo${i}" name="t_recargo${i}" style="width: 100%;">
          <option value="">Seleccione Recargo</option>
          <% TRecargo.all.each do |tr| %>
            <option data-value="<%= tr.tasa %>" value="<%= tr.id %>"><%= tr.tasa * 100 %> %</option>
          <% end %>
        </select>
      </td>
      <td class="descripcion-cell"></td>
      <td class="quantity-cell"><input class="quantity" min="0" step="0.01" style="height: 28px; width: 100%;" type="number" value="1"></td>
      <td class="price-cell"><input class="price" min="0" readonly="readonly" step="0.01" style="height: 28px; width: 100%;" type="number"></td>
      <td class="subtotal-cell" style="text-align: center;"></td>
    </tr>
  `);
  $(`#t_recargo${i}`).select2();
  i++;
}

// <input name="t_factura[recargo_desc]" style="width: 100%;">

// Toda fila con una casilla marcada, será eliminada al presionar el botón de eliminación.
// Tal eliminación dependerá según si es servicio o recargo.
function deleteCheckedRows() {
  $('.deletable:checked').each(function() {
    if ($(this).hasClass('deletable-servicio')) {
      // Si es servicio, simulará un click al botón (link) correspondiente generado por el
      // helper de rails: link_to_remove_fields (está en _t_factura_detalle_fields.html.erb).
      // $(this).parent().siblings().last().children().last().click();
      $(this).parent().parent().remove();
    } else {
      // Si es un recargo, simplemente removerá el elemento HTML que es la fila de la tabla.
      $(this).parent().parent().remove();
    }

    setTotal('#total-quantity', getTotal('.quantity'));
    setTotal('#total', getTotal('.subtotal-cell'));
  });
}

// Obtiene el total de una columna seleccionada según su clase.
function getTotal(target, total = 0) {
  $(target).each(function() {
    if ($(this).val() === '') {
      total += Number($(this).text());
    } else {
      total += Number($(this).val());
    }
  });
  return total;
}

// Asigna el total al elemento HTML objetivo.
function setTotal(target, total = 0) {
  $(target).text(total);
}

// Asigna el subtotal. Hay que indicar si el campo actual donde se dispara el
// evento es quantity o price, con `isQuantity`. `thys` es la sustitución de la
// palabra reservada `this`, para hacer entender que se utiliza el elemento actual.
function setSubTotal(thys, isQuantity = true) {
  if (isQuantity) {
    var quantity = Number($(thys).val());
    var price = 0;
    var selfClass = 'price-cell';
  } else {
    var price = Number($(thys).val());
    var quantity = 0;
    var selfClass = 'quantity-cell';
  }
  $(thys).parent().siblings().each(function () {
    if ($(this).hasClass(selfClass)) {
      if (isQuantity) {
        price = Number($(this).children().first().val());
      } else {
        quantity = Number($(this).children().first().val());
      }
    }
    if ($(this).hasClass('subtotal-cell')) {
      $(this).text(quantity * price);
    }
  });
}
